{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.js","index.js"],"names":["ContactForm","state","name","phone","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","id","uuidv4","resetForm","isExistContact","contacts","find","contact","alert","this","onSubmit","type","placeholder","onChange","Component","ContactListItem","onRemove","onClick","ContactList","length","map","Filter","filter","uniqId","App","handleAddContact","newContact","prevState","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","visibleContacts","defaultProps","number","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.557f0ba4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n//import ContactList from '../ContactList';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    filter: PropTypes.string,\r\n  };\r\n\r\n    state = {\r\n        name: \"\",\r\n        phone: \"\",\r\n        //contacts: [],\r\n    };\r\n\r\n    handleChangeForm = ({ target }) => {\r\n        const { name, value } = target\r\n        this.setState({ [name]: value })\r\n    };\r\n\r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const { name, phone } = this.state;\r\n        const { onAdd } = this.props;\r\n        const isValidateForm = this.validateForm()\r\n\r\n        if (!isValidateForm)\r\n            onAdd({ id: uuidv4(), name, phone })\r\n            this.resetForm()    \r\n    };\r\n\r\n    validateForm = () => {\r\n        const { name, phone } = this.state;\r\n        const { contacts } = this.props\r\n        const isExistContact = !!contacts.find((contact) => contact.name === name);\r\n        if (!name || !phone) {\r\n            alert('Some filed is empty')\r\n            return true\r\n        }\r\n        if (isExistContact) {\r\n            alert('Contact is already exist');\r\n            return true\r\n        }\r\n    }   \r\n        //return onCheckUnique = (name) => {\r\n            //isExistContact && alert('Contact is already exist')\r\n            //return !isExistContact   \r\n        //}\r\n\r\n    resetForm = () => {\r\n        this.setState({ name: '', phone: '' });\r\n    };\r\n\r\n    render() {\r\n        const { name, phone } = this.state;\r\n        //const { contacts } = this.props;\r\n        return (\r\n            <form onSubmit={this.handleFormSubmit}>\r\n                <input type=\"text\" name=\"name\" placeholder=\"Enter name\" value={name} onChange={this.handleChangeForm}/>\r\n                <input type=\"tel\" name=\"phone\" placeholder=\"Enter phone number\" value={phone} onChange={this.handleChangeForm} />\r\n                <button type='submit'>Add Contact</button>    \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n        name: PropTypes.string,\r\n        phone: PropTypes.number,\r\n        onCheckUnique: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = ({ id, name, phone, onRemove }) => {\r\n    return (\r\n        <li key={id}>\r\n            {name}: {phone} <button id={id} onClick={() => onRemove(id)}>delete</button>\r\n        </li>\r\n    )\r\n};\r\n\r\nconst ContactList = ({ contacts, onRemove }) => {\r\n    if (contacts.length === 0) return null\r\n    return (\r\n        <ul>\r\n            {contacts.map(contacts => <ContactListItem {...contacts} onRemove={onRemove} />)}\r\n        </ul>\r\n    )\r\n};\r\nContactListItem.propTypes = {\r\n        //id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        phone: PropTypes.string.isRequired,\r\n        onRemove: PropTypes.func.isRequired,\r\n        contacts: PropTypes.array,\r\n};\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  const uniqId = uuidv4();\r\n  return (\r\n    <input\r\n      type='text'\r\n      name='filter'\r\n      value={filter}\r\n      onChange={({ target }) => onChange(target.value)}\r\n      placeholder='Enter name for Search'\r\n      id={uniqId}\r\n    />\r\n  )\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React, { Component } from 'react';\n//import { v4 as uuidv4 } from 'uuid';\n//import PropTypes from 'prop-types';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\n\nclass App extends Component {\n static defaultProps = {\n    name: '',\n    number: '',\n  };\n  state = {\n    contacts: [      { id: 'id-1', name: 'Rosie Simpson', phone: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', phone: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', phone: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', phone: '227-91-26' },],\n    filter: '',\n  }\n\n  handleAddContact = (newContact) =>\n    this.setState(prevState => ({\n    contacts: [...prevState.contacts, newContact],\n  }))\n\n  handleRemoveContact = (id) => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter((contact) => contact.id !== id)\n      }\n    })\n  }\n  \n  handleFilterChange = (filter) => this.setState({ filter })\n  \n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  }\n\n    componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      this.setState(() => {\n        return {\n          contacts: parsedContacts,\n        };\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state\n    const visibleContacts = this.getVisibleContacts();\n    return (<div>\n      <h2>Phonebook</h2>\n      <ContactForm onAdd={this.handleAddContact} contacts={this.state.contacts}/>\n      <h2>Contacts</h2>\n      <Filter filter={filter} onChange={this.handleFilterChange} />\n      <ContactList contacts={visibleContacts} onRemove={this.handleRemoveContact} />\n    </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App/App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}